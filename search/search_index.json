{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#write-a-thing","title":"Write A Thing","text":"<p>Use LLMs to help you write your things.</p> <p> </p>"},{"location":"#maintainers","title":"Maintainers","text":"<ul> <li>Dan Saattrup Nielsen (@saattrupdan,   dan.nielsen@alexandra.dk)</li> </ul>"},{"location":"#quickstart","title":"Quickstart","text":"<p>The easiest way to use the package is as a uv tool.</p> <p>First, you should ensure that you have a <code>.env</code> file in your current working directory with the following content:</p> <pre><code>GEMINI_API_KEY=&lt;your-google-api-key&gt;\n</code></pre> <p>You can then start writing documents using the following command:</p> <pre><code>uvx write-a-thing &lt;your-prompt&gt; [-f &lt;file-to-use-in-document&gt;] [-f &lt;another-file-to-use-in-document&gt;]\n</code></pre> <p>This both installs the package and runs the command. You can also replace <code>GEMINI_API_KEY</code> with, e.g., <code>OPENAI_API_KEY</code>, but then you will need to change the LLM model used with the <code>--model</code> option when running the command.</p> <p>You can see all available arguments by running the following command:</p> <pre><code>uvx write-a-thing --help\n</code></pre>"},{"location":"api/write_a_thing/","title":"write_a_thing","text":"write_a_thing<p> source package write_a_thing </p> <p>Use LLMs to help you write your things.</p> <p> Functions </p> <ul> <li> <p>write \u2014 Write a thing using LLMs and store it as a Word document.</p> </li> </ul> <p> source write(prompt: str, file_paths: list[Path], model: str, temperature: float) \u2192 None </p> <p>Write a thing using LLMs and store it as a Word document.</p> <p> Parameters </p> <ul> <li> <p>prompt :  str \u2014 The prompt to write about.</p> </li> <li> <p>file_paths :  list[Path] \u2014 A list of file paths to documents that provide context for the writing.</p> </li> <li> <p>model :  str \u2014 The LiteLLM model ID to use for the agent.</p> </li> <li> <p>temperature :  float \u2014 The temperature to use for the model. Use 0.0 for greedy decoding.</p> </li> </ul>"},{"location":"api/write_a_thing/cli/","title":"write_a_thing.cli","text":"write_a_thing.cli<p> source module write_a_thing.cli </p> <p>The Command-line Interface (CLI) for writing things with LLMs.</p> <p> Functions </p> <ul> <li> <p>main \u2014 Write a thing using a prompt and an optional file.</p> </li> </ul> <p> source main(prompt: str, file: list[str], model: str, temperature: float) \u2192 None </p> <p>Write a thing using a prompt and an optional file.</p>"},{"location":"api/write_a_thing/tools/","title":"write_a_thing.tools","text":"write_a_thing.tools<p> source module write_a_thing.tools </p> <p>The tools used by the agents.</p> <p> Functions </p> <ul> <li> <p>ask_user \u2014 Ask the user a question and return their response.</p> </li> <li> <p>broadcast \u2014 Broadcast a message to the user.</p> </li> <li> <p>measure_document_length \u2014 Measure the length of the given text.</p> </li> <li> <p>load_document \u2014 Load a document from the given file path.</p> </li> <li> <p>save_as_word \u2014 Save the given Markdown content as a Word document.</p> </li> <li> <p>open_word_document \u2014 Open a Word document.</p> </li> </ul> <p> source ask_user(question: str) \u2192 str </p> <p>Ask the user a question and return their response.</p> <p> Parameters </p> <ul> <li> <p>question :  str \u2014 The question to ask the user.</p> </li> </ul> <p> Returns </p> <ul> <li> <p>str \u2014 The user's response to the question.</p> </li> </ul> <p> source broadcast(message: str) \u2192 str </p> <p>Broadcast a message to the user.</p> <p>All broadcasts must be brief and start with an emoji.</p> <p> Parameters </p> <ul> <li> <p>message :  str \u2014 A message to broadcast, starting with an emoji.</p> </li> </ul> <p> Returns </p> <ul> <li> <p>str \u2014 A confirmation message stating whether the writing process has been initiated.</p> </li> </ul> <p> source measure_document_length(text: str) \u2192 dict[str, int] </p> <p>Measure the length of the given text.</p> <p>This returns the number of characters, words, lines, and pages in the text.</p> <p> Parameters </p> <ul> <li> <p>text :  str \u2014 The text to measure.</p> </li> </ul> <p> Returns </p> <ul> <li> <p>A mapping with the following keys \u2014</p> <pre><code>- \"characters\": The number of characters in the text.\n- \"words\": The number of words in the text.\n- \"lines\": The number of lines in the text.\n- \"pages\": The estimated number of pages in the text.\n</code></pre> </li> </ul> <p> source load_document(file_path: str) \u2192 str </p> <p>Load a document from the given file path.</p> <p>The <code>file_path</code> should point to an existing document file.</p> <p> Parameters </p> <ul> <li> <p>file_path :  str \u2014 The path to the document file.</p> </li> </ul> <p> Returns </p> <ul> <li> <p>str \u2014 The Markdown parsed content of the document.</p> </li> </ul> <p> source save_as_word(markdown_content: str, output_path: str) \u2192 bool </p> <p>Save the given Markdown content as a Word document.</p> <p> Parameters </p> <ul> <li> <p>markdown_content :  str \u2014 The Markdown content to save as a Word document.</p> </li> <li> <p>output_path :  str \u2014 The path where the Word document will be saved.</p> </li> </ul> <p> Returns </p> <ul> <li> <p>bool \u2014 The path to the saved Word document.</p> </li> </ul> <p> source open_word_document(file_path: str) \u2192 None </p> <p>Open a Word document.</p> <p> Parameters </p> <ul> <li> <p>file_path :  str \u2014 The path to the Word document file.</p> </li> </ul>"},{"location":"api/write_a_thing/writing/","title":"write_a_thing.writing","text":"write_a_thing.writing<p> source module write_a_thing.writing </p> <p>Writing things with LLMs.</p> <p> Functions </p> <ul> <li> <p>write \u2014 Write a thing using LLMs and store it as a Word document.</p> </li> </ul> <p> source write(prompt: str, file_paths: list[Path], model: str, temperature: float) \u2192 None </p> <p>Write a thing using LLMs and store it as a Word document.</p> <p> Parameters </p> <ul> <li> <p>prompt :  str \u2014 The prompt to write about.</p> </li> <li> <p>file_paths :  list[Path] \u2014 A list of file paths to documents that provide context for the writing.</p> </li> <li> <p>model :  str \u2014 The LiteLLM model ID to use for the agent.</p> </li> <li> <p>temperature :  float \u2014 The temperature to use for the model. Use 0.0 for greedy decoding.</p> </li> </ul>"}]}